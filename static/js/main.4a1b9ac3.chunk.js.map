{"version":3,"sources":["component/ReadOnlyRow.js","component/EditableRow.js","component/TableData.js","component/ExportPdf.js","component/ExportFile.js","App.js","reportWebVitals.js","index.js"],"names":["ReadOnlyRow","contact","editFormEvent","handleDeleteClick","sno","name","education","gender","desc","className","onClick","event","EditableRow","editFormData","handleEditFormChange","console","log","type","onChange","value","placeholder","required","TableData","addFormData","handleAddFormChange","ExportPdf","pdfData","TableHead","doc","jsPDF","text","autoTable","map","data","dataKey","field","body","save","pdfDownload","ExportFile","csvData","fileName","e","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","App","useState","contacts","setContacts","setAddFormData","setEditFormData","setEditContactId","updatePressed","setUpdatePressed","preventDefault","formValues","contactsno","newContact","index","findIndex","c","splice","filter","i","style","float","justifyContent","margin","width","title","onSubmit","editContact","length","fieldName","target","getAttribute","fieldValue","newFormData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a1b9ac3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const ReadOnlyRow = ({ contact,editFormEvent,handleDeleteClick }) => {\r\n    return (\r\n        \r\n            <tr key={contact.sno}>\r\n                <td>{contact.sno}</td>\r\n                <td>{contact.name}</td>\r\n                <td>{contact.education}</td>\r\n                <td>{contact.gender}</td>\r\n                <td>{contact.desc}</td>\r\n                <td>\r\n                    <button className=\"btn btn-warning\" onClick={(event)=>editFormEvent(event,contact)}>Update</button>\r\n                    \r\n                </td>\r\n                <td>\r\n                <button className=\"btn btn-danger\" onClick={(event)=>handleDeleteClick(event,contact.sno)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const EditableRow = ({ editFormData, handleEditFormChange }) => {\r\n  console.log(editFormData);\r\n  return (\r\n    <div className=\"container form-check\">\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"name\"\r\n            onChange={handleEditFormChange}\r\n            value={editFormData.name}\r\n            placeholder=\"Enter name\"\r\n            required\r\n          />\r\n          Education\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"education\"\r\n            onChange={handleEditFormChange}\r\n            value={editFormData.education}\r\n            placeholder=\"Enter education\"\r\n            required\r\n          />\r\n          Gender\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"mx-1 form-check-input\"\r\n            name=\"gender\"\r\n            onChange={handleEditFormChange}\r\n            // value={editFormData.gender}\r\n            value=\"Male\"\r\n            required\r\n          />\r\n           Male\r\n         <br/>\r\n          <input\r\n            type=\"radio\"\r\n            className=\"mx-1 form-check-input\"\r\n            name=\"gender\" \r\n            onChange={handleEditFormChange}\r\n            // value={editFormData.gender}\r\n            value=\"Female\"\r\n          />\r\n           Female\r\n          <br />\r\n          Description\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"desc\"\r\n            onChange={handleEditFormChange}\r\n            value={editFormData.desc}\r\n            placeholder=\"Enter Description\"\r\n            required\r\n          />\r\n          \r\n          <br />\r\n          <button className=\"btn btn-primary\" type=\"submit\" >Update List</button>\r\n        </div>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const TableData = ({ addFormData,handleAddFormChange }) => {\r\n    // console.log(contacts[contacts.length-1]);\r\n    return (\r\n        <div className=\"container form-check\">\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"name\"\r\n            onChange={handleAddFormChange}\r\n            placeholder=\"Enter name\"\r\n            value={addFormData.name}\r\n            required\r\n          />\r\n          Education\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"education\"\r\n            onChange={handleAddFormChange}\r\n            placeholder=\"Enter education\"\r\n            value={addFormData.education}\r\n            required\r\n          />\r\n          Gender\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"mx-1 form-check-input\"\r\n            name=\"gender\"\r\n            onChange={handleAddFormChange}\r\n            value=\"Male\"\r\n          />\r\n          Male\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"mx-1 form-check-input\"\r\n            name=\"gender\"\r\n            onChange={handleAddFormChange}\r\n            value=\"Female\"\r\n            required\r\n          />\r\n          Female\r\n          <br />\r\n          Description\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"desc\"\r\n            onChange={handleAddFormChange}\r\n            placeholder=\"Enter Description\"\r\n            value={addFormData.desc}\r\n            required\r\n          />\r\n          <br />\r\n          <button className=\"btn btn-primary\" type=\"submit\">ADD</button>\r\n        </div>\r\n   \r\n    )\r\n}\r\n","import React from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\"\r\nexport const ExportPdf = ({ pdfData,TableHead }) => {\r\n  const pdfDownload = () => {\r\n      const doc=new jsPDF()\r\n      doc.text(\"Table Data\",20,10);\r\n      \r\n      doc.autoTable({\r\n          TableHead:TableHead.map(data=>\r\n        ({...data,dataKey:data.field})\r\n        \r\n          ),\r\n          body:pdfData\r\n      })\r\n      doc.save(\"TableData.pdf\");\r\n  };\r\n  return (\r\n    <div>\r\n      <button className=\"btn btn-danger mx-2\" onClick={()=>pdfDownload()}>PDF</button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nimport * as FileSaver from 'file-saver';\r\n\r\nimport * as XLSX from 'xlsx';\r\n\r\n\r\n\r\nexport const ExportFile = ({csvData, fileName}) => {\r\n\r\n\r\n\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n\r\n    const fileExtension = '.xlsx';\r\n\r\n\r\n\r\n    const exportToCSV = (csvData, fileName) => {\r\n\r\n        const ws = XLSX.utils.json_to_sheet(csvData);\r\n\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n\r\n        const data = new Blob([excelBuffer], {type: fileType});\r\n\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <button className=\"btn btn-success\" onClick={(e) => exportToCSV(csvData,fileName)}>EXCEL</button>\r\n\r\n    )\r\n\r\n}\r\n\r\n","import React, { useState, Fragment } from \"react\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport { ReadOnlyRow } from \"./component/ReadOnlyRow\";\nimport { EditableRow } from \"./component/EditableRow\";\nimport { TableData } from \"./component/TableData\";\nimport { ExportPdf } from \"./component/ExportPdf\";\nimport { ExportFile } from \"./component/ExportFile\";\nimport { ExportCSV } from \"./component/ExportCSV\";\nfunction App() {\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    sno: \"\",\n    name: \"\",\n    education: \"\",\n    gender: \"\",\n    desc: \"\",\n  });\n  const [editFormData, setEditFormData] = useState({\n    sno: \"\",\n    name: \"\",\n    education: \"\",\n    gender: \"\",\n    desc: \"\",\n  });\n  const [editContactId, setEditContactId] = useState(null);\n  const [updatePressed, setUpdatePressed] = useState(null);\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n    //console.log(newFormData);\n    setAddFormData(newFormData);\n    //setAddFormData(\"\");\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n    //console.log(newFormData);\n    setEditFormData(newFormData);\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      sno: contacts[contacts.length - 1].sno + 1,\n      name: addFormData.name,\n      education: addFormData.education,\n      gender: addFormData.gender,\n      desc: addFormData.desc,\n    };\n    setContacts([...contacts, newContact]);\n    const data = {\n      sno: \"\",\n      name: \"\",\n      education: \"\",\n      gender: \"\",\n      desc: \"\",\n    };\n    setAddFormData(data);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n    const editContact = {\n      sno: editFormData.sno,\n      name: editFormData.name,\n      education: editFormData.education,\n      gender: editFormData.gender,\n      desc: editFormData.desc,\n    };\n    const newContact = [...contacts];\n    const index = contacts.findIndex(\n      (contact) => contact.sno === editFormData.sno\n    );\n    newContact[index] = editContact;\n    setContacts(newContact);\n    setEditContactId(null);\n    setUpdatePressed(null);\n  };\n\n  const editFormEvent = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.sno);\n    const formValues = {\n      sno: contact.sno,\n      name: contact.name,\n      education: contact.education,\n      gender: contact.gender,\n      desc: contact.desc,\n    };\n    setEditFormData(formValues);\n    setUpdatePressed(contacts);\n  };\n  const handleDeleteClick = (event, contactsno) => {\n    event.preventDefault();\n    const newContact = [...contacts];\n    const index = contacts.findIndex((c) => c.sno === contactsno);\n    newContact.splice(index, 1);\n    setContacts(\n      newContact\n        .map((e) => {\n          return e;\n        })\n        .filter((e, i) => {\n          return (e.sno = i + 1);\n        })\n    );\n  };\n  const TableHead = [\n    { title: \"sno\", field: \"sno\" },\n    { title: \"name\", field: \"name\" },\n    { title: \"education\", field: \"education\" },\n    { title: \"gender\", field: \"gender\" },\n    { title: \"Description\", field: \"Description\" },\n  ];\n  const filename = \"Table Data\";\n  const style = {\n    float: \"right\",\n    justifyContent: \"space-between\",\n    /* display: flex; */\n    margin: \"15px\",\n    width: \"133px\",\n  };\n  const style1={\n    \"position\": \"absolute\",\n    /* margin-left: 48%; */\n    \"right\": \"151px\",\n    \"top\": \"27px\",\n  }\n  return (\n    <>\n      <div >\n        <h5 style={style1}>Download Table</h5>\n      </div>\n      <div className=\"d-flex\" style={style}>\n        <div className=\"d-flex p-2\">\n          <ExportFile csvData={contacts} fileName={filename} />\n          <ExportPdf TableHead={TableHead} pdfData={contacts} />\n        </div>\n      </div>\n\n      <form\n        onSubmit={\n          updatePressed !== null ? handleEditFormSubmit : handleFormSubmit\n        }\n      >\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Sno.</th>\n              <th>Name</th>\n              <th>Education</th>\n              <th>gender</th>\n              <th>Description</th>\n              <th>Update</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {contacts.map((e) => (\n              <ReadOnlyRow\n                key={e.sno}\n                contact={e}\n                editFormEvent={editFormEvent}\n                handleDeleteClick={handleDeleteClick}\n              />\n            ))}\n            {/* {\n            contacts.map((e)=>(\n                \n            ))\n          } */}\n          </tbody>\n        </table>\n        {updatePressed === null ? (\n          <h2 className=\"mx-5\">Add Details</h2>\n        ) : (\n          <h2 className=\"mx-5\">Update Details</h2>\n        )}\n        {updatePressed !== null ? (\n          <EditableRow\n            editFormData={editFormData}\n            handleEditFormChange={handleEditFormChange}\n          />\n        ) : (\n          <TableData\n            addFormData={addFormData}\n            handleAddFormChange={handleAddFormChange}\n          />\n        )}\n      </form>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}